{"ast":null,"code":"import _slicedToArray from\"/Users/a1/Documents/kholiavko-todo/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";// Components/TodosPage.tsx\nimport React,{useEffect,useState}from'react';import{useSelector,useDispatch}from'react-redux';import{addTodo,toggleTodo,removeTodo}from'../redux/reducer';import{TodoList}from'../Components/TodoList';import{ToDoForm}from'../Components/ToDoForm';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export var TodosPage=function TodosPage(){var _useState=useState('all'),_useState2=_slicedToArray(_useState,2),filter=_useState2[0],setFilter=_useState2[1];var todosRedux=useSelector(function(state){return state.todos;});var dispatch=useDispatch();console.log('Todos in the Redux store:',todosRedux);useEffect(function(){var savedTodos=JSON.parse(localStorage.getItem('todos')||'[]');if(savedTodos.length>0){dispatch({type:'SET_TODOS',payload:savedTodos});}},[dispatch]);var addHandler=function addHandler(title){if(title.trim()!==''){dispatch(addTodo(title));}};var toggleHandler=function toggleHandler(id){dispatch(toggleTodo(id));};var removeHandler=function removeHandler(id){var shouldRemove=confirm('Are you sure?');if(shouldRemove){dispatch(removeTodo(id));}};useEffect(function(){localStorage.setItem('todos',JSON.stringify(todosRedux));},[todosRedux]);return/*#__PURE__*/_jsxs(React.Fragment,{children:[/*#__PURE__*/_jsx(ToDoForm,{onAdd:addHandler}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){return setFilter('all');},children:\"All\"}),/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){return setFilter('completed');},children:\"Completed\"}),/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){return setFilter('current');},children:\"Current\"})]})}),/*#__PURE__*/_jsx(TodoList,{todos:todosRedux,onToggle:toggleHandler,onRemove:removeHandler,filter:filter})]});};","map":{"version":3,"names":["React","useEffect","useState","useSelector","useDispatch","addTodo","toggleTodo","removeTodo","TodoList","ToDoForm","TodosPage","filter","setFilter","todosRedux","state","todos","dispatch","console","log","savedTodos","JSON","parse","localStorage","getItem","length","type","payload","addHandler","title","trim","toggleHandler","id","removeHandler","shouldRemove","confirm","setItem","stringify"],"sources":["/Users/a1/Documents/kholiavko-todo/src/pages/TodosPage.tsx"],"sourcesContent":["// Components/TodosPage.tsx\nimport React, {useEffect, useState} from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { ITodo } from '../Components/interfaces';\nimport { addTodo, toggleTodo, removeTodo } from '../redux/reducer';\nimport { TodoList } from '../Components/TodoList';\nimport { ToDoForm } from '../Components/ToDoForm';\n\ndeclare var confirm: (question: string) => boolean;\n\nexport const TodosPage: React.FC = () => {\n  const [filter, setFilter] = useState<string>('all');\n  const todosRedux: ITodo[] = useSelector((state: { todos: ITodo[] }) => state.todos);\n  const dispatch = useDispatch();\n\n  console.log('Todos in the Redux store:', todosRedux);\n\n  useEffect(() => {\n    const savedTodos = JSON.parse(localStorage.getItem('todos') || '[]') as ITodo[];\n    if (savedTodos.length > 0) {\n      dispatch({ type: 'SET_TODOS', payload: savedTodos });\n    }\n  }, [dispatch]);\n\n  const addHandler = (title: string) => {\n    if (title.trim() !== '') {\n      dispatch(addTodo(title));\n    }\n  };\n\n  const toggleHandler = (id: number) => {\n    dispatch(toggleTodo(id));\n  };\n\n  const removeHandler = (id: number) => {\n    const shouldRemove = confirm('Are you sure?');\n    if (shouldRemove) {\n      dispatch(removeTodo(id));\n    }\n  };\n\n  useEffect(() => {\n    localStorage.setItem('todos', JSON.stringify(todosRedux));\n  }, [todosRedux]);\n\n  return (\n      <React.Fragment>\n        <ToDoForm onAdd={addHandler}/>\n        <div>\n          <div>\n            <button onClick={() => setFilter('all')}>All</button>\n            <button onClick={() => setFilter('completed')}>Completed</button>\n            <button onClick={() => setFilter('current')}>Current</button>\n          </div>\n        </div>\n        <TodoList todos={todosRedux} onToggle={toggleHandler} onRemove={removeHandler} filter={filter}/>\n      </React.Fragment>\n  );\n};\n"],"mappings":"wHAAA;AACA,MAAOA,MAAP,EAAeC,SAAf,CAA0BC,QAA1B,KAAyC,OAAzC,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CAEA,OAASC,OAAT,CAAkBC,UAAlB,CAA8BC,UAA9B,KAAgD,kBAAhD,CACA,OAASC,QAAT,KAAyB,wBAAzB,CACA,OAASC,QAAT,KAAyB,wBAAzB,C,wFAIA,MAAO,IAAMC,UAAmB,CAAG,QAAtBA,UAAsB,EAAM,CACvC,cAA4BR,QAAQ,CAAS,KAAT,CAApC,wCAAOS,MAAP,eAAeC,SAAf,eACA,GAAMC,WAAmB,CAAGV,WAAW,CAAC,SAACW,KAAD,QAA+BA,MAAK,CAACC,KAArC,EAAD,CAAvC,CACA,GAAMC,SAAQ,CAAGZ,WAAW,EAA5B,CAEAa,OAAO,CAACC,GAAR,CAAY,2BAAZ,CAAyCL,UAAzC,EAEAZ,SAAS,CAAC,UAAM,CACd,GAAMkB,WAAU,CAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,OAArB,GAAiC,IAA5C,CAAnB,CACA,GAAIJ,UAAU,CAACK,MAAX,CAAoB,CAAxB,CAA2B,CACzBR,QAAQ,CAAC,CAAES,IAAI,CAAE,WAAR,CAAqBC,OAAO,CAAEP,UAA9B,CAAD,CAAR,CACD,CACF,CALQ,CAKN,CAACH,QAAD,CALM,CAAT,CAOA,GAAMW,WAAU,CAAG,QAAbA,WAAa,CAACC,KAAD,CAAmB,CACpC,GAAIA,KAAK,CAACC,IAAN,KAAiB,EAArB,CAAyB,CACvBb,QAAQ,CAACX,OAAO,CAACuB,KAAD,CAAR,CAAR,CACD,CACF,CAJD,CAMA,GAAME,cAAa,CAAG,QAAhBA,cAAgB,CAACC,EAAD,CAAgB,CACpCf,QAAQ,CAACV,UAAU,CAACyB,EAAD,CAAX,CAAR,CACD,CAFD,CAIA,GAAMC,cAAa,CAAG,QAAhBA,cAAgB,CAACD,EAAD,CAAgB,CACpC,GAAME,aAAY,CAAGC,OAAO,CAAC,eAAD,CAA5B,CACA,GAAID,YAAJ,CAAkB,CAChBjB,QAAQ,CAACT,UAAU,CAACwB,EAAD,CAAX,CAAR,CACD,CACF,CALD,CAOA9B,SAAS,CAAC,UAAM,CACdqB,YAAY,CAACa,OAAb,CAAqB,OAArB,CAA8Bf,IAAI,CAACgB,SAAL,CAAevB,UAAf,CAA9B,EACD,CAFQ,CAEN,CAACA,UAAD,CAFM,CAAT,CAIA,mBACI,MAAC,KAAD,CAAO,QAAP,yBACE,KAAC,QAAD,EAAU,KAAK,CAAEc,UAAjB,EADF,cAEE,kCACE,oCACE,eAAQ,OAAO,CAAE,yBAAMf,UAAS,CAAC,KAAD,CAAf,EAAjB,iBADF,cAEE,eAAQ,OAAO,CAAE,yBAAMA,UAAS,CAAC,WAAD,CAAf,EAAjB,uBAFF,cAGE,eAAQ,OAAO,CAAE,yBAAMA,UAAS,CAAC,SAAD,CAAf,EAAjB,qBAHF,GADF,EAFF,cASE,KAAC,QAAD,EAAU,KAAK,CAAEC,UAAjB,CAA6B,QAAQ,CAAEiB,aAAvC,CAAsD,QAAQ,CAAEE,aAAhE,CAA+E,MAAM,CAAErB,MAAvF,EATF,GADJ,CAaD,CAhDM"},"metadata":{},"sourceType":"module"}