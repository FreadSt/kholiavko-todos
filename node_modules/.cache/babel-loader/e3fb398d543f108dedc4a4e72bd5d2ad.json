{"ast":null,"code":"var _jsxFileName = \"/Users/a1/Documents/kholiavko-todo/src/pages/TodosPage.tsx\",\n    _s = $RefreshSig$();\n\n// Components/TodosPage.tsx\nimport React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { addTodo, toggleTodo, removeTodo } from '../redux/reducer';\nimport { TodoList } from '../Components/TodoList';\nimport { ToDoForm } from '../Components/ToDoForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TodosPage = () => {\n  _s();\n\n  const [filter, setFilter] = useState('all');\n  const todosRedux = useSelector(state => state.todos);\n  const dispatch = useDispatch();\n  console.log('Todos in the Redux store:', todosRedux);\n  useEffect(() => {\n    const savedTodos = JSON.parse(localStorage.getItem('todos') || '[]');\n\n    if (savedTodos.length > 0) {\n      dispatch({\n        type: 'SET_TODOS',\n        payload: savedTodos\n      });\n    }\n  }, [dispatch]);\n\n  const addHandler = title => {\n    if (title.trim() !== '') {\n      dispatch(addTodo(title));\n    }\n  };\n\n  const toggleHandler = id => {\n    dispatch(toggleTodo(id));\n  };\n\n  const removeHandler = id => {\n    const shouldRemove = confirm('Are you sure?');\n\n    if (shouldRemove) {\n      dispatch(removeTodo(id));\n    }\n  };\n\n  useEffect(() => {\n    localStorage.setItem('todos', JSON.stringify(todosRedux));\n  }, [todosRedux]);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ToDoForm, {\n      onAdd: addHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setFilter('all'),\n          children: \"All\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setFilter('completed'),\n          children: \"Completed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setFilter('current'),\n          children: \"Current\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(TodoList, {\n      todos: todosRedux,\n      onToggle: toggleHandler,\n      onRemove: removeHandler,\n      filter: filter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 7\n  }, this);\n};\n\n_s(TodosPage, \"khoIrYtmV5MCKNO75VW70ssTdYU=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = TodosPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodosPage\");","map":{"version":3,"names":["React","useEffect","useState","useSelector","useDispatch","addTodo","toggleTodo","removeTodo","TodoList","ToDoForm","TodosPage","filter","setFilter","todosRedux","state","todos","dispatch","console","log","savedTodos","JSON","parse","localStorage","getItem","length","type","payload","addHandler","title","trim","toggleHandler","id","removeHandler","shouldRemove","confirm","setItem","stringify"],"sources":["/Users/a1/Documents/kholiavko-todo/src/pages/TodosPage.tsx"],"sourcesContent":["// Components/TodosPage.tsx\nimport React, {useEffect, useState} from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { ITodo } from '../Components/interfaces';\nimport { addTodo, toggleTodo, removeTodo } from '../redux/reducer';\nimport { TodoList } from '../Components/TodoList';\nimport { ToDoForm } from '../Components/ToDoForm';\n\ndeclare var confirm: (question: string) => boolean;\n\n\nexport const TodosPage: React.FC = () => {\n  const [filter, setFilter] = useState<string>('all');\n  const todosRedux: ITodo[] = useSelector((state: { todos: ITodo[] }) => state.todos);\n  const dispatch = useDispatch();\n\n  console.log('Todos in the Redux store:', todosRedux);\n\n  useEffect(() => {\n    const savedTodos = JSON.parse(localStorage.getItem('todos') || '[]') as ITodo[];\n    if (savedTodos.length > 0) {\n      dispatch({ type: 'SET_TODOS', payload: savedTodos });\n    }\n  }, [dispatch]);\n\n  const addHandler = (title: string) => {\n    if (title.trim() !== '') {\n      dispatch(addTodo(title));\n    }\n  };\n\n  const toggleHandler = (id: number) => {\n    dispatch(toggleTodo(id));\n  };\n\n  const removeHandler = (id: number) => {\n    const shouldRemove = confirm('Are you sure?');\n    if (shouldRemove) {\n      dispatch(removeTodo(id));\n    }\n  };\n\n  useEffect(() => {\n    localStorage.setItem('todos', JSON.stringify(todosRedux));\n  }, [todosRedux]);\n\n  return (\n      <React.Fragment>\n        <ToDoForm onAdd={addHandler}/>\n        <div>\n          <div>\n            <button onClick={() => setFilter('all')}>All</button>\n            <button onClick={() => setFilter('completed')}>Completed</button>\n            <button onClick={() => setFilter('current')}>Current</button>\n          </div>\n        </div>\n        <TodoList todos={todosRedux} onToggle={toggleHandler} onRemove={removeHandler} filter={filter}/>\n      </React.Fragment>\n  );\n};\n"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,SAASC,OAAT,EAAkBC,UAAlB,EAA8BC,UAA9B,QAAgD,kBAAhD;AACA,SAASC,QAAT,QAAyB,wBAAzB;AACA,SAASC,QAAT,QAAyB,wBAAzB;;AAKA,OAAO,MAAMC,SAAmB,GAAG,MAAM;EAAA;;EACvC,MAAM,CAACC,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAS,KAAT,CAApC;EACA,MAAMW,UAAmB,GAAGV,WAAW,CAAEW,KAAD,IAA+BA,KAAK,CAACC,KAAtC,CAAvC;EACA,MAAMC,QAAQ,GAAGZ,WAAW,EAA5B;EAEAa,OAAO,CAACC,GAAR,CAAY,2BAAZ,EAAyCL,UAAzC;EAEAZ,SAAS,CAAC,MAAM;IACd,MAAMkB,UAAU,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,OAArB,KAAiC,IAA5C,CAAnB;;IACA,IAAIJ,UAAU,CAACK,MAAX,GAAoB,CAAxB,EAA2B;MACzBR,QAAQ,CAAC;QAAES,IAAI,EAAE,WAAR;QAAqBC,OAAO,EAAEP;MAA9B,CAAD,CAAR;IACD;EACF,CALQ,EAKN,CAACH,QAAD,CALM,CAAT;;EAOA,MAAMW,UAAU,GAAIC,KAAD,IAAmB;IACpC,IAAIA,KAAK,CAACC,IAAN,OAAiB,EAArB,EAAyB;MACvBb,QAAQ,CAACX,OAAO,CAACuB,KAAD,CAAR,CAAR;IACD;EACF,CAJD;;EAMA,MAAME,aAAa,GAAIC,EAAD,IAAgB;IACpCf,QAAQ,CAACV,UAAU,CAACyB,EAAD,CAAX,CAAR;EACD,CAFD;;EAIA,MAAMC,aAAa,GAAID,EAAD,IAAgB;IACpC,MAAME,YAAY,GAAGC,OAAO,CAAC,eAAD,CAA5B;;IACA,IAAID,YAAJ,EAAkB;MAChBjB,QAAQ,CAACT,UAAU,CAACwB,EAAD,CAAX,CAAR;IACD;EACF,CALD;;EAOA9B,SAAS,CAAC,MAAM;IACdqB,YAAY,CAACa,OAAb,CAAqB,OAArB,EAA8Bf,IAAI,CAACgB,SAAL,CAAevB,UAAf,CAA9B;EACD,CAFQ,EAEN,CAACA,UAAD,CAFM,CAAT;EAIA,oBACI,QAAC,KAAD,CAAO,QAAP;IAAA,wBACE,QAAC,QAAD;MAAU,KAAK,EAAEc;IAAjB;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAA,uBACE;QAAA,wBACE;UAAQ,OAAO,EAAE,MAAMf,SAAS,CAAC,KAAD,CAAhC;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,eAEE;UAAQ,OAAO,EAAE,MAAMA,SAAS,CAAC,WAAD,CAAhC;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAFF,eAGE;UAAQ,OAAO,EAAE,MAAMA,SAAS,CAAC,SAAD,CAAhC;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAHF;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QAFF,eASE,QAAC,QAAD;MAAU,KAAK,EAAEC,UAAjB;MAA6B,QAAQ,EAAEiB,aAAvC;MAAsD,QAAQ,EAAEE,aAAhE;MAA+E,MAAM,EAAErB;IAAvF;MAAA;MAAA;MAAA;IAAA,QATF;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAaD,CAhDM;;GAAMD,S;UAEiBP,W,EACXC,W;;;KAHNM,S"},"metadata":{},"sourceType":"module"}