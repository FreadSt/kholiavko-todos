{"ast":null,"code":"import{createSlice}from'@reduxjs/toolkit';var initialState=[];var todosSlice=createSlice({name:'todos',initialState:initialState,reducers:{addTodo:function addTodo(state,action){var newTodo={title:action.payload,id:Date.now(),completed:false};state.push(newTodo);},toggleTodo:function toggleTodo(state,action){var todo=state.find(function(todo){return todo.id===action.payload;});if(todo){todo.completed=!todo.completed;}},removeTodo:function removeTodo(state,action){var index=state.findIndex(function(todo){return todo.id===action.payload;});if(index!==-1){state.splice(index,1);}}}});var _todosSlice$actions=todosSlice.actions,addTodo=_todosSlice$actions.addTodo,toggleTodo=_todosSlice$actions.toggleTodo,removeTodo=_todosSlice$actions.removeTodo;export{addTodo,toggleTodo,removeTodo};export default todosSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","todosSlice","name","reducers","addTodo","state","action","newTodo","title","payload","id","Date","now","completed","push","toggleTodo","todo","find","removeTodo","index","findIndex","splice","actions","reducer"],"sources":["/Users/a1/Documents/kholiavko-todo/src/redux/reducer.tsx"],"sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport {ITodo} from \"../Components/interfaces\";\n\ninterface TodosState extends Array<ITodo> {}\n\nconst initialState: TodosState = [];\n\nconst todosSlice = createSlice({\n    name: 'todos',\n    initialState,\n    reducers: {\n        addTodo: (state, action: PayloadAction<string>) => {\n            const newTodo: ITodo = {\n                title: action.payload,\n                id: Date.now(),\n                completed: false,\n            };\n            state.push(newTodo);\n        },\n        toggleTodo: (state, action: PayloadAction<number>) => {\n            const todo = state.find((todo) => todo.id === action.payload);\n            if (todo) {\n                todo.completed = !todo.completed;\n            }\n        },\n        removeTodo: (state, action: PayloadAction<number>) => {\n            const index = state.findIndex((todo) => todo.id === action.payload);\n            if (index !== -1) {\n                state.splice(index, 1);\n            }\n        },\n    },\n});\n\nexport const { addTodo, toggleTodo, removeTodo } = todosSlice.actions;\nexport default todosSlice.reducer;\n"],"mappings":"AAAA,OAASA,WAAT,KAA2C,kBAA3C,CAKA,GAAMC,aAAwB,CAAG,EAAjC,CAEA,GAAMC,WAAU,CAAGF,WAAW,CAAC,CAC3BG,IAAI,CAAE,OADqB,CAE3BF,YAAY,CAAZA,YAF2B,CAG3BG,QAAQ,CAAE,CACNC,OAAO,CAAE,iBAACC,KAAD,CAAQC,MAAR,CAA0C,CAC/C,GAAMC,QAAc,CAAG,CACnBC,KAAK,CAAEF,MAAM,CAACG,OADK,CAEnBC,EAAE,CAAEC,IAAI,CAACC,GAAL,EAFe,CAGnBC,SAAS,CAAE,KAHQ,CAAvB,CAKAR,KAAK,CAACS,IAAN,CAAWP,OAAX,EACH,CARK,CASNQ,UAAU,CAAE,oBAACV,KAAD,CAAQC,MAAR,CAA0C,CAClD,GAAMU,KAAI,CAAGX,KAAK,CAACY,IAAN,CAAW,SAACD,IAAD,QAAUA,KAAI,CAACN,EAAL,GAAYJ,MAAM,CAACG,OAA7B,EAAX,CAAb,CACA,GAAIO,IAAJ,CAAU,CACNA,IAAI,CAACH,SAAL,CAAiB,CAACG,IAAI,CAACH,SAAvB,CACH,CACJ,CAdK,CAeNK,UAAU,CAAE,oBAACb,KAAD,CAAQC,MAAR,CAA0C,CAClD,GAAMa,MAAK,CAAGd,KAAK,CAACe,SAAN,CAAgB,SAACJ,IAAD,QAAUA,KAAI,CAACN,EAAL,GAAYJ,MAAM,CAACG,OAA7B,EAAhB,CAAd,CACA,GAAIU,KAAK,GAAK,CAAC,CAAf,CAAkB,CACdd,KAAK,CAACgB,MAAN,CAAaF,KAAb,CAAoB,CAApB,EACH,CACJ,CApBK,CAHiB,CAAD,CAA9B,CA2BO,wBAA4ClB,UAAU,CAACqB,OAAvD,CAAQlB,OAAR,qBAAQA,OAAR,CAAiBW,UAAjB,qBAAiBA,UAAjB,CAA6BG,UAA7B,qBAA6BA,UAA7B,C,sCACP,cAAejB,WAAU,CAACsB,OAA1B"},"metadata":{},"sourceType":"module"}