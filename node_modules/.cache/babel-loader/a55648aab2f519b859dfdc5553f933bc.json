{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst todosSlice = createSlice({\n  name: 'todos',\n  initialState: [],\n  // Initial state should be an array of ITodo\n  reducers: {\n    addTodo: (state, action) => {\n      const newTodo = {\n        title: action.payload,\n        id: Date.now(),\n        completed: false\n      };\n      state.push(newTodo);\n    },\n    toggleTodo: (state, action) => {\n      const todo = state.find(todo => todo.id === action.payload);\n\n      if (todo) {\n        todo.completed = !todo.completed;\n      }\n    },\n    removeTodo: (state, action) => {\n      const index = state.findIndex(todo => todo.id === action.payload);\n\n      if (index !== -1) {\n        state.splice(index, 1);\n      }\n    }\n  }\n});\nexport const {\n  addTodo,\n  toggleTodo,\n  removeTodo\n} = todosSlice.actions;\nexport default todosSlice.reducer;","map":{"version":3,"names":["createSlice","todosSlice","name","initialState","reducers","addTodo","state","action","newTodo","title","payload","id","Date","now","completed","push","toggleTodo","todo","find","removeTodo","index","findIndex","splice","actions","reducer"],"sources":["/Users/a1/Documents/kholiavko-todo/src/redux/reducer.tsx"],"sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { ITodo } from '../Components/interfaces';\n\nconst todosSlice = createSlice({\n  name: 'todos',\n  initialState: [] as ITodo[], // Initial state should be an array of ITodo\n  reducers: {\n    addTodo: (state, action: PayloadAction<string>) => {\n      const newTodo: ITodo = {\n        title: action.payload,\n        id: Date.now(),\n        completed: false,\n      }\n      state.push(newTodo);\n    },\n    toggleTodo: (state, action: PayloadAction<number>) => {\n      const todo = state.find(todo => todo.id === action.payload);\n      if (todo) {\n        todo.completed = !todo.completed;\n      }\n    },\n    removeTodo: (state, action: PayloadAction<number>) => {\n      const index = state.findIndex(todo => todo.id === action.payload);\n      if (index !== -1) {\n        state.splice(index, 1);\n      }\n    },\n  },\n});\n\nexport const { addTodo, toggleTodo, removeTodo } = todosSlice.actions;\nexport default todosSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAT,QAA2C,kBAA3C;AAGA,MAAMC,UAAU,GAAGD,WAAW,CAAC;EAC7BE,IAAI,EAAE,OADuB;EAE7BC,YAAY,EAAE,EAFe;EAEA;EAC7BC,QAAQ,EAAE;IACRC,OAAO,EAAE,CAACC,KAAD,EAAQC,MAAR,KAA0C;MACjD,MAAMC,OAAc,GAAG;QACrBC,KAAK,EAAEF,MAAM,CAACG,OADO;QAErBC,EAAE,EAAEC,IAAI,CAACC,GAAL,EAFiB;QAGrBC,SAAS,EAAE;MAHU,CAAvB;MAKAR,KAAK,CAACS,IAAN,CAAWP,OAAX;IACD,CARO;IASRQ,UAAU,EAAE,CAACV,KAAD,EAAQC,MAAR,KAA0C;MACpD,MAAMU,IAAI,GAAGX,KAAK,CAACY,IAAN,CAAWD,IAAI,IAAIA,IAAI,CAACN,EAAL,KAAYJ,MAAM,CAACG,OAAtC,CAAb;;MACA,IAAIO,IAAJ,EAAU;QACRA,IAAI,CAACH,SAAL,GAAiB,CAACG,IAAI,CAACH,SAAvB;MACD;IACF,CAdO;IAeRK,UAAU,EAAE,CAACb,KAAD,EAAQC,MAAR,KAA0C;MACpD,MAAMa,KAAK,GAAGd,KAAK,CAACe,SAAN,CAAgBJ,IAAI,IAAIA,IAAI,CAACN,EAAL,KAAYJ,MAAM,CAACG,OAA3C,CAAd;;MACA,IAAIU,KAAK,KAAK,CAAC,CAAf,EAAkB;QAChBd,KAAK,CAACgB,MAAN,CAAaF,KAAb,EAAoB,CAApB;MACD;IACF;EApBO;AAHmB,CAAD,CAA9B;AA2BA,OAAO,MAAM;EAAEf,OAAF;EAAWW,UAAX;EAAuBG;AAAvB,IAAsClB,UAAU,CAACsB,OAAvD;AACP,eAAetB,UAAU,CAACuB,OAA1B"},"metadata":{},"sourceType":"module"}