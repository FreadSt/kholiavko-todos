{"ast":null,"code":"var _jsxFileName = \"/Users/a1/Documents/kholiavko-todo/src/pages/TodosPage.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { TodoList } from '../Components/TodoList';\nimport { ToDoForm } from \"../Components/ToDoForm\";\nimport { connect } from 'react-redux';\nimport { addTodo } from '../redux/actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TodosPage = () => {\n  _s();\n\n  const [todos, setTodos] = useState([]);\n  useEffect(() => {\n    const saved = JSON.parse(localStorage.getItem('todos') || '[]');\n    setTodos(saved);\n  }, []);\n  useEffect(() => {\n    localStorage.setItem('todos', JSON.stringify(todos));\n  }, [todos]);\n\n  const addHandler = title => {\n    const newTodo = {\n      title: title,\n      id: Date.now(),\n      completed: false\n    };\n    setTodos(prev => [newTodo, ...prev]);\n  };\n\n  const toggleHandler = id => {\n    setTodos(prev => prev.map(todo => {\n      if (todo.id === id) {\n        return { ...todo,\n          completed: !todo.completed\n        };\n      }\n\n      return todo;\n    }));\n  };\n\n  const removeHandler = id => {\n    const shouldRemove = confirm('Are you sure?');\n\n    if (shouldRemove) {\n      setTodos(prev => prev.filter(todo => todo.id !== id));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ToDoForm, {\n      onAdd: addHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(TodoList, {\n      todos: todos,\n      onToggle: toggleHandler,\n      onRemove: removeHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 6\n  }, this);\n};\n\n_s(TodosPage, \"JPZTns5sUK6f8sNf0ff2EvpSbn0=\");\n\n_c = TodosPage;\n\nconst mapDispatchToProps = dispatch => ({\n  onAdd: title => dispatch(addTodo(title))\n});\n\nexport default connect(null, mapDispatchToProps)(TodosPage);\n\nvar _c;\n\n$RefreshReg$(_c, \"TodosPage\");","map":{"version":3,"names":["React","useState","useEffect","TodoList","ToDoForm","connect","addTodo","TodosPage","todos","setTodos","saved","JSON","parse","localStorage","getItem","setItem","stringify","addHandler","title","newTodo","id","Date","now","completed","prev","toggleHandler","map","todo","removeHandler","shouldRemove","confirm","filter","mapDispatchToProps","dispatch","onAdd"],"sources":["/Users/a1/Documents/kholiavko-todo/src/pages/TodosPage.tsx"],"sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport { TodoList } from '../Components/TodoList';\nimport { ITodo } from '../Components/interfaces';\nimport { ToDoForm } from \"../Components/ToDoForm\";\nimport {Dispatch} from \"redux\";\nimport { connect } from 'react-redux';\nimport { addTodo } from '../redux/actions';\n\ndeclare var confirm : (question: string) => boolean\nexport const TodosPage: React.FC = () => {\n    const [todos, setTodos] = useState<ITodo[]>([])\n  \n  useEffect(() => {\n    const saved = JSON.parse(localStorage.getItem('todos') || '[]') as ITodo[]\n    setTodos(saved)\n  }, [])\n\n\n  useEffect (() => {\n    localStorage.setItem('todos', JSON.stringify(todos))\n  }, [todos])\n\n  const addHandler = (title: string) => {\n    const newTodo: ITodo = {\n      title: title,\n      id: Date.now(),\n      completed: false\n    }\n\n    setTodos(prev => [newTodo, ...prev])\n  }\n\n  const toggleHandler = (id: number) => {\n    setTodos(prev => \n      prev.map(todo => {\n      if(todo.id === id) {\n        return{\n          ...todo, \n          completed: !todo.completed\n        }\n      }\n      return todo\n    }))\n  }\n\n  const removeHandler = (id: number) => {\n    const shouldRemove = confirm('Are you sure?')\n    if(shouldRemove) {\n      setTodos(prev => prev.filter(todo => todo.id !== id ))\n    }\n  }\n    return (\n     <React.Fragment>\n        <ToDoForm onAdd={addHandler}/>\n        <TodoList \n          todos={todos}\n          onToggle={toggleHandler}\n          onRemove={removeHandler}\n        />\n    </React.Fragment>\n    )\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n  onAdd: (title: string) => dispatch(addTodo(title)),\n});\n\nexport default connect(null, mapDispatchToProps)(TodosPage);"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAASC,QAAT,QAAyB,wBAAzB;AAEA,SAASC,QAAT,QAAyB,wBAAzB;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,OAAT,QAAwB,kBAAxB;;AAGA,OAAO,MAAMC,SAAmB,GAAG,MAAM;EAAA;;EACrC,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAU,EAAV,CAAlC;EAEFC,SAAS,CAAC,MAAM;IACd,MAAMQ,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,OAArB,KAAiC,IAA5C,CAAd;IACAL,QAAQ,CAACC,KAAD,CAAR;EACD,CAHQ,EAGN,EAHM,CAAT;EAMAR,SAAS,CAAE,MAAM;IACfW,YAAY,CAACE,OAAb,CAAqB,OAArB,EAA8BJ,IAAI,CAACK,SAAL,CAAeR,KAAf,CAA9B;EACD,CAFQ,EAEN,CAACA,KAAD,CAFM,CAAT;;EAIA,MAAMS,UAAU,GAAIC,KAAD,IAAmB;IACpC,MAAMC,OAAc,GAAG;MACrBD,KAAK,EAAEA,KADc;MAErBE,EAAE,EAAEC,IAAI,CAACC,GAAL,EAFiB;MAGrBC,SAAS,EAAE;IAHU,CAAvB;IAMAd,QAAQ,CAACe,IAAI,IAAI,CAACL,OAAD,EAAU,GAAGK,IAAb,CAAT,CAAR;EACD,CARD;;EAUA,MAAMC,aAAa,GAAIL,EAAD,IAAgB;IACpCX,QAAQ,CAACe,IAAI,IACXA,IAAI,CAACE,GAAL,CAASC,IAAI,IAAI;MACjB,IAAGA,IAAI,CAACP,EAAL,KAAYA,EAAf,EAAmB;QACjB,OAAM,EACJ,GAAGO,IADC;UAEJJ,SAAS,EAAE,CAACI,IAAI,CAACJ;QAFb,CAAN;MAID;;MACD,OAAOI,IAAP;IACD,CARC,CADM,CAAR;EAUD,CAXD;;EAaA,MAAMC,aAAa,GAAIR,EAAD,IAAgB;IACpC,MAAMS,YAAY,GAAGC,OAAO,CAAC,eAAD,CAA5B;;IACA,IAAGD,YAAH,EAAiB;MACfpB,QAAQ,CAACe,IAAI,IAAIA,IAAI,CAACO,MAAL,CAAYJ,IAAI,IAAIA,IAAI,CAACP,EAAL,KAAYA,EAAhC,CAAT,CAAR;IACD;EACF,CALD;;EAME,oBACC,QAAC,KAAD,CAAO,QAAP;IAAA,wBACG,QAAC,QAAD;MAAU,KAAK,EAAEH;IAAjB;MAAA;MAAA;MAAA;IAAA,QADH,eAEG,QAAC,QAAD;MACE,KAAK,EAAET,KADT;MAEE,QAAQ,EAAEiB,aAFZ;MAGE,QAAQ,EAAEG;IAHZ;MAAA;MAAA;MAAA;IAAA,QAFH;EAAA;IAAA;IAAA;IAAA;EAAA,QADD;AAUH,CApDM;;GAAMrB,S;;KAAAA,S;;AAsDb,MAAMyB,kBAAkB,GAAIC,QAAD,KAAyB;EAClDC,KAAK,EAAGhB,KAAD,IAAmBe,QAAQ,CAAC3B,OAAO,CAACY,KAAD,CAAR;AADgB,CAAzB,CAA3B;;AAIA,eAAeb,OAAO,CAAC,IAAD,EAAO2B,kBAAP,CAAP,CAAkCzB,SAAlC,CAAf"},"metadata":{},"sourceType":"module"}