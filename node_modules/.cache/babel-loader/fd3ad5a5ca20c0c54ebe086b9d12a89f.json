{"ast":null,"code":"var _jsxFileName = \"/Users/a1/Documents/kholiavko-todo/src/Components/TodoList.tsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TodoList = _ref => {\n  let {\n    todos,\n    onRemove,\n    onToggle,\n    filter\n  } = _ref;\n  const filteredTodos = filter === 'completed' ? todos.filter(todo => todo.completed) : filter === 'current' ? todos.filter(todo => !todo.completed) : todos;\n\n  if (filteredTodos.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"center\",\n      children: \"No quests matching the filter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 16\n    }, this);\n  }\n\n  const removeHandler = (event, id) => {\n    event.preventDefault();\n    onRemove(id);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: filteredTodos.map(todo => {\n      const classes = ['todo'];\n\n      if (todo.completed) {\n        classes.push('completed');\n      }\n\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        className: classes.join(' '),\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: todo.completed,\n            onChange: () => onToggle(todo.id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: todo.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"material-icons red-text\",\n            onClick: event => removeHandler(event, todo.id),\n            children: \"delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 25\n        }, this)\n      }, todo.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n_c = TodoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"names":["React","TodoList","todos","onRemove","onToggle","filter","filteredTodos","todo","completed","length","removeHandler","event","id","preventDefault","map","classes","push","join","title"],"sources":["/Users/a1/Documents/kholiavko-todo/src/Components/TodoList.tsx"],"sourcesContent":["import React from 'react';\nimport { ITodo } from './interfaces';\n\ntype TodoListProps = {\n    todos: ITodo[];\n    onToggle(id: number): void;\n    onRemove(id: number): void;\n    filter: string;\n};\n\nexport const TodoList: React.FC<TodoListProps> = ({ todos, onRemove, onToggle, filter }) => {\n    const filteredTodos = filter === 'completed' ? todos.filter((todo) => todo.completed) :\n        filter === 'current' ? todos.filter((todo) => !todo.completed) :\n            todos;\n\n    if (filteredTodos.length === 0) {\n        return <p className=\"center\">No quests matching the filter</p>;\n    }\n\n    const removeHandler = (event: React.MouseEvent, id: number) => {\n        event.preventDefault();\n        onRemove(id);\n    };\n\n    return (\n        <ul>\n            {filteredTodos.map((todo) => {\n                const classes = ['todo'];\n                if (todo.completed) {\n                    classes.push('completed');\n                }\n                return (\n                    <li className={classes.join(' ')} key={todo.id}>\n                        <label>\n                            <input type=\"checkbox\" checked={todo.completed} onChange={() => onToggle(todo.id)} />\n                            <span>{todo.title}</span>\n                            <i\n                                className=\"material-icons red-text\"\n                                onClick={(event) => removeHandler(event, todo.id)}\n                            >\n                                delete\n                            </i>\n                        </label>\n                    </li>\n                );\n            })}\n        </ul>\n    );\n};\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAUA,OAAO,MAAMC,QAAiC,GAAG,QAA2C;EAAA,IAA1C;IAAEC,KAAF;IAASC,QAAT;IAAmBC,QAAnB;IAA6BC;EAA7B,CAA0C;EACxF,MAAMC,aAAa,GAAGD,MAAM,KAAK,WAAX,GAAyBH,KAAK,CAACG,MAAN,CAAcE,IAAD,IAAUA,IAAI,CAACC,SAA5B,CAAzB,GAClBH,MAAM,KAAK,SAAX,GAAuBH,KAAK,CAACG,MAAN,CAAcE,IAAD,IAAU,CAACA,IAAI,CAACC,SAA7B,CAAvB,GACIN,KAFR;;EAIA,IAAII,aAAa,CAACG,MAAd,KAAyB,CAA7B,EAAgC;IAC5B,oBAAO;MAAG,SAAS,EAAC,QAAb;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAP;EACH;;EAED,MAAMC,aAAa,GAAG,CAACC,KAAD,EAA0BC,EAA1B,KAAyC;IAC3DD,KAAK,CAACE,cAAN;IACAV,QAAQ,CAACS,EAAD,CAAR;EACH,CAHD;;EAKA,oBACI;IAAA,UACKN,aAAa,CAACQ,GAAd,CAAmBP,IAAD,IAAU;MACzB,MAAMQ,OAAO,GAAG,CAAC,MAAD,CAAhB;;MACA,IAAIR,IAAI,CAACC,SAAT,EAAoB;QAChBO,OAAO,CAACC,IAAR,CAAa,WAAb;MACH;;MACD,oBACI;QAAI,SAAS,EAAED,OAAO,CAACE,IAAR,CAAa,GAAb,CAAf;QAAA,uBACI;UAAA,wBACI;YAAO,IAAI,EAAC,UAAZ;YAAuB,OAAO,EAAEV,IAAI,CAACC,SAArC;YAAgD,QAAQ,EAAE,MAAMJ,QAAQ,CAACG,IAAI,CAACK,EAAN;UAAxE;YAAA;YAAA;YAAA;UAAA,QADJ,eAEI;YAAA,UAAOL,IAAI,CAACW;UAAZ;YAAA;YAAA;YAAA;UAAA,QAFJ,eAGI;YACI,SAAS,EAAC,yBADd;YAEI,OAAO,EAAGP,KAAD,IAAWD,aAAa,CAACC,KAAD,EAAQJ,IAAI,CAACK,EAAb,CAFrC;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAHJ;QAAA;UAAA;UAAA;UAAA;QAAA;MADJ,GAAuCL,IAAI,CAACK,EAA5C;QAAA;QAAA;QAAA;MAAA,QADJ;IAcH,CAnBA;EADL;IAAA;IAAA;IAAA;EAAA,QADJ;AAwBH,CAtCM;KAAMX,Q"},"metadata":{},"sourceType":"module"}